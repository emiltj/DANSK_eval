color = 'Model')
# Plot
ggplot(df_wide, aes(color=rowname, y=value, x=rowname)) +
# Geom_bar
geom_point(#position = position_dodge(width = 0.7),
#width=0.7,
size = 2.5,
aes(color=rowname),
stat="identity") + #,
#colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.4, color="black", size=3.5) +
guides(color = guide_legend(reverse=TRUE)) +
geom_point(shape=1, size=2.5, colour="black")+
#scale_color_brewer(palette = "Set2") +
coord_flip() +
# Set labs
labs(title = "F1-scores on DANSK",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score",
color = 'Model')
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="white", size=3.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Factor by right order
df$rowname <- factor(df$rowname, levels=c("da_dacy_large_ner_fine_grained", "da_dacy_medium_ner_fine_grained", "da_dacy_small_ner_fine_grained", "saattrupdan/nbailab-base-ner-scandi", "da_dacy_large_trf", "da_dacy_medium_trf", "da_dacy_small_trf", "da_core_news_lg", "da_core_news_md","da_core_news_sm"))
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Factor by right order
df$rowname <- fct_rev(factor(df$rowname, levels=c("da_dacy_large_ner_fine_grained", "da_dacy_medium_ner_fine_grained", "da_dacy_small_ner_fine_grained", "saattrupdan/nbailab-base-ner-scandi", "da_dacy_large_trf", "da_dacy_medium_trf", "da_dacy_small_trf", "da_core_news_lg", "da_core_news_md","da_core_news_sm")))
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_color_brewer(palette = "Set2") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_color_brewer(palette = "Set2") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = "Set2") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = "YlOR") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
coul <- colorRampPalette(coul)(25)
coul <- brewer.pal(4, "PuOr")
coul <- colorRampPalette(coul)(25)
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = "coul") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Factor by right order
df$rowname <- fct_rev(factor(df$rowname, levels=c("da_dacy_large_ner_fine_grained", "da_dacy_medium_ner_fine_grained", "da_dacy_small_ner_fine_grained", "saattrupdan/nbailab-base-ner-scandi", "da_dacy_large_trf", "da_dacy_medium_trf", "da_dacy_small_trf", "da_core_news_lg", "da_core_news_md","da_core_news_sm")))
coul <- brewer.pal(4, "PuOr")
coul <- colorRampPalette(coul)(25)
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = "coul") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
palette_blues <- colorRampPalette(colors = c("white", "#004b88"))(12)
scales::show_col(palette_blues[4:12])
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Factor by right order
df$rowname <- fct_rev(factor(df$rowname, levels=c("da_dacy_large_ner_fine_grained", "da_dacy_medium_ner_fine_grained", "da_dacy_small_ner_fine_grained", "saattrupdan/nbailab-base-ner-scandi", "da_dacy_large_trf", "da_dacy_medium_trf", "da_dacy_small_trf", "da_core_news_lg", "da_core_news_md","da_core_news_sm")))
coul <- brewer.pal(4, "PuOr")
coul <- colorRampPalette(coul)(25)
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = coul) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Factor by right order
df$rowname <- fct_rev(factor(df$rowname, levels=c("da_dacy_large_ner_fine_grained", "da_dacy_medium_ner_fine_grained", "da_dacy_small_ner_fine_grained", "saattrupdan/nbailab-base-ner-scandi", "da_dacy_large_trf", "da_dacy_medium_trf", "da_dacy_small_trf", "da_core_news_lg", "da_core_news_md","da_core_news_sm")))
palette_blues <- colorRampPalette(colors = c("white", "#004b88"))(12)
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = palette_blues) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Factor by right order
df$rowname <- fct_rev(factor(df$rowname, levels=c("da_dacy_large_ner_fine_grained", "da_dacy_medium_ner_fine_grained", "da_dacy_small_ner_fine_grained", "saattrupdan/nbailab-base-ner-scandi", "da_dacy_large_trf", "da_dacy_medium_trf", "da_dacy_small_trf", "da_core_news_lg", "da_core_news_md","da_core_news_sm")))
palette_blues <- colorRampPalette(colors = c("white", "#004b88"))(12)
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = palette_blues) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Factor by right order
df$rowname <- fct_rev(factor(df$rowname, levels=c("da_dacy_large_ner_fine_grained", "da_dacy_medium_ner_fine_grained", "da_dacy_small_ner_fine_grained", "saattrupdan/nbailab-base-ner-scandi", "da_dacy_large_trf", "da_dacy_medium_trf", "da_dacy_small_trf", "da_core_news_lg", "da_core_news_md","da_core_news_sm")))
palette_blues <- colorRampPalette(colors = c("white", "#004b88"))(12)
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = "palette_blues") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
palette_blues
palette_blues <- colorRampPalette(colors = c("white", "#004b88"))(20)
palette_blues
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = "palette_blues") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
install.packages(c("BH", "bit", "blob", "broom", "bslib", "cachem", "cli", "colorspace", "commonmark", "cpp11", "curl", "data.table", "dbplyr", "digest", "distributional", "dplyr", "dtplyr", "evaluate", "fansi", "fastmap", "feasts", "forcats", "forecast", "fracdiff", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "progressr", "ps", "purrr", "Rcpp", "RcppArmadillo", "readr", "readxl", "rlang", "rmarkdown", "sass", "slider", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "tinytex", "tseries", "tsibble", "utf8", "vctrs", "vroom", "xfun", "xts", "yaml"))
install.packages(c("boot", "class", "codetools", "foreign", "MASS", "Matrix", "mgcv", "nlme", "spatial", "survival"), lib="/opt/homebrew/Cellar/r/4.2.2/lib/R/library")
install.packages(c("BH", "bit", "blob", "broom", "bslib", "cachem", "cli", "colorspace", "commonmark", "cpp11", "curl", "data.table", "dbplyr", "digest", "distributional", "dplyr", "dtplyr", "evaluate", "fansi", "fastmap", "feasts", "forcats", "forecast", "fracdiff", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "progressr", "ps", "purrr", "Rcpp", "RcppArmadillo", "readr", "readxl", "rlang", "rmarkdown", "sass", "slider", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "tinytex", "tseries", "tsibble", "utf8", "vctrs", "vroom", "xfun", "xts", "yaml"))
install.packages(c("BH", "bit", "blob", "broom", "bslib", "cachem", "cli", "colorspace", "commonmark", "cpp11", "curl", "data.table", "dbplyr", "digest", "distributional", "dplyr", "dtplyr", "evaluate", "fansi", "fastmap", "feasts", "forcats", "forecast", "fracdiff", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "progressr", "ps", "purrr", "Rcpp", "RcppArmadillo", "readr", "readxl", "rlang", "rmarkdown", "sass", "slider", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "tinytex", "tseries", "tsibble", "utf8", "vctrs", "vroom", "xfun", "xts", "yaml"))
install.packages(c("BH", "bit", "blob", "broom", "bslib", "cachem", "cli", "colorspace", "commonmark", "cpp11", "curl", "data.table", "dbplyr", "digest", "distributional", "dplyr", "dtplyr", "evaluate", "fansi", "fastmap", "feasts", "forcats", "forecast", "fracdiff", "fs", "gargle", "ggplot2", "googledrive", "googlesheets4", "gtable", "haven", "highr", "hms", "htmltools", "httr", "isoband", "jsonlite", "knitr", "lifecycle", "lubridate", "markdown", "modelr", "openssl", "pillar", "processx", "progressr", "ps", "purrr", "Rcpp", "RcppArmadillo", "readr", "readxl", "rlang", "rmarkdown", "sass", "slider", "stringi", "stringr", "sys", "tibble", "tidyr", "tidyselect", "tidyverse", "timeDate", "tinytex", "tseries", "tsibble", "utf8", "vctrs", "vroom", "xfun", "xts", "yaml"))
palette_blues <- colorRampPalette(colors = c("white", "#004b88"))(20)
palette_blues
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), hjust=1.6, color="black", size=4.5, position = position_dodge(0.8)) +
scale_fill_brewer(palette = "palette_blues") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
coord_flip() +
# Let x-axis dodge to avoid clutter
#scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# LOAD PACKAGES
```{r}
library("pacman")
pacman::p_load(ggplot2, tidyverse, corrr, RColorBrewer)
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/tag_f1_wide.csv", header=T)
# Set model values as rownames
df <- df %>% column_to_rownames(., var = 'Model')
# Make into long format
df_wide <- df %>%
rownames_to_column() %>%
gather(colname, value, -rowname)
pacman::p_load(ggplot2, tidyverse, corrr, RColorBrewer)
library("ggplot2")
library("pacman")
pacman::p_load(ggplot2, tidyverse, corrr, RColorBrewer)
library("pacman")
pacman::p_load(ggplot2, tidyverse, corrr, RColorBrewer)
