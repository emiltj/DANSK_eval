# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of the DaCy NER models",
x = "Model",
y = "F1-score")
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/ner_models_performance/domain_f1_wide.csv", header=T)
# Set model as rownames
df <- df %>% column_to_rownames(., var = 'Model')
# Keep only the across domains
df <- df %>% select("F1-score"="across_domains")
# As factor
df$rowname <- as.factor(df$rowname)
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="white", size=3.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of the DaCy NER models",
x = "Model",
y = "F1-score")
df
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/ner_models_performance/domain_f1_wide.csv", header=T)
# Keep only the across domains
df <- df %>% select("F1-score"="across_domains")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="white", size=3.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of the DaCy NER models",
x = "Model",
y = "F1-score")
df
# Keep only the across domains
df <- df %>% select(c("F1-score"="across_domains", "Model"="Model"))
df
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/ner_models_performance/domain_f1_wide.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("F1-score"="across_domains", "Model"="Model"))
df
# Keep only the across domains
df <- df %>% select(c("Model"="Model", "F1-score"="across_domains"))
df
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/ner_models_performance/domain_f1_wide.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("Model"="Model", "F1-score"="across_domains"))
df
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/ner_models_performance/domain_f1_wide.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
df
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="white", size=3.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of the DaCy NER models",
x = "Model",
y = "F1-score")
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
df
# Load data
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/other_models_performance/domain_f1_long.csv", header=T)
# Keep only the across domains
df <- df %>% select(c("rowname"="Model", "value"="across_domains"))
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="white", size=3.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of the DaCy NER models",
x = "Model",
y = "F1-score")
# Plot
ggplot(df, aes(fill=rowname, y=value, x=rowname)) +
# Geom_bar
geom_bar(position = position_dodge(width = .8),
width=.7,
stat="identity",
colour="black") +
# Add text with F1-scores
geom_text(aes(label=round(value, 2)), vjust=1.6, color="white", size=3.5, position = position_dodge(0.8)) +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="none") +
# Let x-axis dodge to avoid clutter
scale_x_discrete(guide = guide_axis(n.dodge=2)) +
# Set labs
labs(title = "F1-scores",
subtitle = "F1-performance of Danish SOTA models",
x = "Model",
y = "F1-score")
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/kappa_annotated.csv", header=T)
df
# Clean up dataset
df <- df %>% select(!(name=c("X","rater_avg"))) # Remove first and last columns
colnames(df) <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
# Make into long format
df_wide <- df %>%
rownames_to_column() %>%
gather(colname, value, -rowname)
# Have annotators as factors
df_wide$rowname <- as.factor(df_wide$rowname)
df_wide$colname <- as.factor(df_wide$colname)
# Remove rows with kappa score between same annotators
df_wide = df_wide %>% filter(colname != rowname)
# Create plot
ggplot(df_wide, aes(x = reorder(rowname, sort(as.numeric(rowname), decreasing=T)), y = value, fill=reorder(rowname, sort(as.numeric(rowname),decreasing=T)))) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
geom_boxplot(width=.1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/kappa_annotated.csv", header=T)
df
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/kappa_annotated.csv", header=T)
df
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/tag_counts.csv", header=T)
df
# Clean up dataset
#df <- df %>% select(!(name=c("X","rater_avg"))) # Remove first and last columns
colnames(df) <- c("TAG ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
df
# Clean up dataset
colnames(df) <- c("TAG ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
df
# Make into long format
df_wide <- df %>%
rownames_to_column() %>%
gather(colname, value, -rowname)
df
df_wide
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/tag_counts.csv", header=T)
# Clean up dataset
colnames(df) <- c("TAG ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
df
# Set tag as rownames
df <- df %>% column_to_rownames(., var = 'TAG')
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/tag_counts.csv", header=T)
# Clean up dataset
colnames(df) <- c("TAG ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
# Set tag as rownames
df <- df %>% column_to_rownames(., var = 'TAG')
df
# Set tag as rownames
df <- df %>% column_to_rownames(., var = 'TAG')
df
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/ner_models_performance/domain_f1_wide.csv", header=T)
df
# Set model values as rownames
df <- df %>% column_to_rownames(., var = 'Model')
df
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/tag_counts.csv", header=T)
# Clean up dataset
colnames(df) <- c("Tag ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
df
# Set tag as rownames
df <- df %>% column_to_rownames(., var = 'Tag')
df
colnames(df)
# Set tag as rownames
df <- df %>% column_to_rownames(., var = 'Tag')
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/tag_counts.csv", header=T)
# Clean up dataset
colnames(df) <- c("Tag ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
colnames(df)
df
# Set tag as rownames
df <- df %>% column_to_rownames(., var = 'Tag')
rownames(df) <- df$Tag
df
# Remove Tag column from columns
df <- df %>% select(!(name="Tag"))
df
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/tag_counts.csv", header=T)
# Clean up dataset
colnames(df) <- c("Tag ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
# Set Tag column as row names
rownames(df) <- df$Tag
# Remove Tag column from columns
df <- df %>% select(!(name="Tag"))
# Remove Tag column from columns
df <- df %>% select(c(2:))
df
# Remove Tag column from columns
df <- df %>% select(c(2:))
# Remove Tag column from columns
df <- df %>% select(,c(2:))
df
# Remove Tag column from columns
df <- df %>% select(,c(2:))
# Remove Tag column from columns
df <- df %>% select(c(2:))
# Remove Tag column from columns
df <- df %>% select(c(2:len(colnames(.))))
# Remove Tag column from columns
df <- df %>% select(c(2:len(colnames(df))))
# Remove Tag column from columns
df <- df %>% select(c(2:length(colnames(df))))
df
# Make into long format
df_wide <- df %>%
rownames_to_column() %>%
gather(colname, value, -rowname)
df_wide
# Have annotators as factors
df_wide$rowname <- as.factor(df_wide$rowname)
df_wide$colname <- as.factor(df_wide$colname)
# Have annotators as factors
df_wide$rowname <- as.factor(df_wide$rowname)
df_wide$colname <- as.factor(df_wide$colname)
# Create plot
ggplot(df_wide, aes(x = reorder(rowname, sort(as.numeric(rowname), decreasing=T)), y = value, fill=reorder(rowname, sort(as.numeric(rowname),decreasing=T)))) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
geom_boxplot(width=.1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = reorder(rowname, sort(as.numeric(rowname), decreasing=T)), y = value, fill=reorder(rowname, sort(as.numeric(rowname),decreasing=T)))) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname), y = value, fill=rowname)) +
# Create plot
ggplot(df_wide, aes(x = rowname), y = value, fill=rowname) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
geom_boxplot(width=.1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
df_wide
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
geom_boxplot(width=.1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Load dataset
df <- read.csv("/Users/emiltrencknerjessen/Desktop/priv/DANSK_eval/output/DANSK_initial_interrater/tag_counts.csv", header=T)
# Clean up dataset
colnames(df) <- c("Tag ","1", "2", "3", "4", "5", "6", "7", "8", "9", "10")#, "rater_avg") # Change colnames
# Set Tag column as row names
rownames(df) <- df$Tag
# Remove Tag column from columns
df <- df %>% select(c(2:length(colnames(df))))
# Make into long format
df_wide <- df %>%
rownames_to_column() %>%
gather(colname, value, -rowname)
# Have annotators as factors
df_wide$rowname <- as.factor(df_wide$rowname)
df_wide$colname <- as.factor(df_wide$colname)
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
geom_boxplot(width=.1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
geom_boxplot(width=1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Violin plot, don't trim
geom_violin(trim=FALSE) +
# Include boxplot also
geom_boxplot(#width=1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Violin plot, don't trim
geom_violin(trim=FALSE, width = 2) +
# Include boxplot also
geom_boxplot(#width=1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Include boxplot also
geom_boxplot(#width=1,
fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Make boxplot
geom_boxplot(fill="white") +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Make boxplot
geom_boxplot() +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Make boxplot
geom_violin() +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
# Create plot
ggplot(df_wide, aes(x = rowname, y = value, fill=rowname)) +
# Make boxplot
geom_boxplot() +
# Set theme
theme(plot.title = element_text(hjust = 0.5),
plot.subtitle = element_text(hjust = 0.5),
legend.position="right") +
# Set labs
labs(title = "Cohen's Kappa all tokens",
subtitle = "Cohens Kappa scores between annotators, only including annotated tokens",
x = "Annotator",
y = "Cohen's Kappa",
fill='Annotator')
